#!/bin/sh

. /puppet/metalib/bin/lib.sh

if [ -z $VMNAME ]; then
	VMNAME="RS"
fi
cd /tmp || exit 1

vm_list() {
	ruby /puppet/securitycloud/bin/discovery.rb
}

vm_ssh() {
	VMIP=$(securitycloud.init list | grep "^$VMNAME " | awk '{print $2}')
	if [ -z "$VMIP" ]; then
		rreturn 1 "vm ip not detected from cluster"
	fi
	ssh -o 'StrictHostKeyChecking=no' -o 'UserKnownHostsFile=/dev/null' -o 'ConnectTimeout=5' -o 'LogLevel=quiet' root@$VMIP "$1"
	rreturn $? "$0 ssh $@"
}

vm_all() {
	for all in $(securitycloud.init list| awk '{print $1}'); do
		VMNAME=$all securitycloud.init ssh "$1"
	done
}

vm_virtualip() {
	IPS="147.251.253.5 147.251.253.12 147.251.253.26 147.251.253.38 147.251.253.50 147.251.253.53 147.251.253.64"
	VIP="none"

	if [ -f /etc/ipfixcol/virtual_ip.conf ]; then
		VIP=$(cat /etc/ipfixcol/virtual_ip.conf)
	else
		for all in $IPS; do
			ping -c2 -w1 $all 1>/dev/null 2>/dev/null
			if [ $? -eq 1 ]; then
				VIP=$all
				break
			fi
		done
	fi
	echo $VIP
}


case "$1" in

	#used for cluster management
	list)
		vm_list "$2"
	;;
	ssh)
		vm_ssh "$2"
	;;
	node)
		VMNAME=$2 securitycloud.init ssh "$3"
	;;
	all)
		vm_all "$2"
	;;
	update)
		vm_all "cd /puppet && sh bootstrap.install.sh"
	;;



	#used for cluster setup
	myrole)
		ruby /puppet/securitycloud/bin/discovery.rb --query myrole
	;;
	proxy)
		ruby /puppet/securitycloud/bin/discovery.rb --query proxy
	;;
	collectors)
		ruby /puppet/securitycloud/bin/discovery.rb --query collectors
	;;

	
	
	#used for testing during build process
	# distribute small testing set
	fdddist)
		vm_all "ruby /puppet/securitycloud/bin/testdata-fdistdump-distribute.rb"
	;;
	# distribute large set in parallel
	fdddistm)
		for all in $(securitycloud.init list| awk '{print $1}'); do
			VMNAME=$all securitycloud.init ssh "ruby /puppet/securitycloud/bin/testdata-fdistdump-distribute.rb --datasource http://minos.zcu.cz:45454/" | sed "s/^/$all /" &
		done
		wait
	;;
	fdddrop)
		vm_all "rm -r /scratch/fdistdump/data"
	;;



	# used for a cloud setup
	trustmesh)
		for all in $(securitycloud.init list| awk '{print $1}'); do
			cat /dev/shm/sshkey | VMNAME=$all securitycloud.init ssh 'cat > /dev/shm/sshkey; chmod 600 /dev/shm/sshkey; ln -sf /dev/shm/sshkey /root/.ssh/id_rsa'
			cat /root/.ssh/known_hosts | VMNAME=$all securitycloud.init ssh 'cat > /root/.ssh/known_hosts'
		done
	;;
	virtualip)
		vm_virtualip
	;;
	allnodes)
		ruby /puppet/securitycloud/bin/discovery.rb --query allnodes
	;;
	idrop)
		pcs resource disable ipfixcol-subcollector-clone
		pcs resource disable ipfixcol-proxy-clone
		find /data/flow/ -mindepth 1 -maxdepth 1 -type d ! -name .Filesystem_status -exec rm -rf {} \;
		pcs resource enable ipfixcol-subcollector-clone
		pcs resource enable ipfixcol-proxy-clone
	;;



	*)
		rreturn 1 "$0 wrong command"
	;;
esac

